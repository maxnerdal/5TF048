using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace WebApp.Models
{
    /// <summary>
    /// Trade model represents individual buy/sell transactions executed by trading bots
    /// This entity maps to the Trades table in SQL Server
    /// </summary>
    [Table("Trades")]
    public class Trade
    {
        /// <summary>
        /// Primary key - automatically generated by database
        /// </summary>
        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column("TradeId")]
        public long TradeId { get; set; }

        /// <summary>
        /// Foreign key to TradingSessions table
        /// </summary>
        [Required]
        [Column("SessionId")]
        public long SessionId { get; set; }

        /// <summary>
        /// Trading symbol (e.g., "BTCUSDT", "ETHUSDT")
        /// </summary>
        [Required]
        [StringLength(10)]
        [Column("Symbol")]
        public string Symbol { get; set; } = string.Empty;

        /// <summary>
        /// Trade side: "BUY" or "SELL"
        /// </summary>
        [Required]
        [StringLength(10)]
        [Column("Side")]
        public string Side { get; set; } = string.Empty;

        /// <summary>
        /// Price per unit at which the trade was executed
        /// </summary>
        [Required]
        [Column("Price", TypeName = "decimal(18,8)")]
        public decimal Price { get; set; }

        /// <summary>
        /// Quantity of the asset traded
        /// </summary>
        [Required]
        [Column("Quantity", TypeName = "decimal(18,8)")]
        public decimal Quantity { get; set; }

        /// <summary>
        /// Total value of the trade (Price * Quantity)
        /// </summary>
        [Required]
        [Column("Value", TypeName = "decimal(18,2)")]
        public decimal Value { get; set; }

        /// <summary>
        /// Trading fee charged for this transaction
        /// </summary>
        [Required]
        [Column("Fee", TypeName = "decimal(18,8)")]
        public decimal Fee { get; set; } = 0;

        /// <summary>
        /// When the trade was executed
        /// </summary>
        [Required]
        [Column("Timestamp")]
        public DateTime Timestamp { get; set; } = DateTime.UtcNow;

        /// <summary>
        /// Navigation property - TradingSession this trade belongs to
        /// </summary>
        [ForeignKey("SessionId")]
        public virtual TradingSession TradingSession { get; set; } = null!;
    }
}