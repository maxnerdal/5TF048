using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace WebApp.Models
{
    /// <summary>
    /// PerformanceMetric model represents calculated performance statistics for trading sessions
    /// This entity maps to the PerformanceMetrics table in SQL Server
    /// </summary>
    [Table("PerformanceMetrics")]
    public class PerformanceMetric
    {
        /// <summary>
        /// Primary key - automatically generated by database
        /// </summary>
        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column("MetricId")]
        public long MetricId { get; set; }

        /// <summary>
        /// Foreign key to TradingSessions table
        /// </summary>
        [Required]
        [Column("SessionId")]
        public long SessionId { get; set; }

        /// <summary>
        /// Total amount invested in this session
        /// </summary>
        [Required]
        [Column("TotalInvested", TypeName = "decimal(18,2)")]
        public decimal TotalInvested { get; set; }

        /// <summary>
        /// Current total value of all holdings
        /// </summary>
        [Required]
        [Column("TotalValue", TypeName = "decimal(18,2)")]
        public decimal TotalValue { get; set; }

        /// <summary>
        /// Return on Investment percentage
        /// </summary>
        [Required]
        [Column("ROI", TypeName = "decimal(8,4)")]
        public decimal ROI { get; set; }

        /// <summary>
        /// Total number of trades executed
        /// </summary>
        [Required]
        [Column("TotalTrades")]
        public int TotalTrades { get; set; }

        /// <summary>
        /// Win rate percentage (profitable trades / total trades)
        /// </summary>
        [Column("WinRate", TypeName = "decimal(5,2)")]
        public decimal? WinRate { get; set; }

        /// <summary>
        /// When these metrics were last updated
        /// </summary>
        [Required]
        [Column("UpdatedAt")]
        public DateTime UpdatedAt { get; set; } = DateTime.UtcNow;

        /// <summary>
        /// Navigation property - TradingSession these metrics belong to
        /// </summary>
        [ForeignKey("SessionId")]
        public virtual TradingSession TradingSession { get; set; } = null!;
    }
}