using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace WebApp.Models
{
    /// <summary>
    /// TradingSession model represents a backtesting or live trading session
    /// This entity maps to the TradingSessions table in SQL Server
    /// </summary>
    [Table("TradingSessions")]
    public class TradingSession
    {
        /// <summary>
        /// Primary key - automatically generated by database
        /// </summary>
        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column("SessionId")]
        public long SessionId { get; set; }

        /// <summary>
        /// Foreign key to UserBots table
        /// </summary>
        [Required]
        [Column("UserBotId")]
        public long UserBotId { get; set; }

        /// <summary>
        /// When the trading session started
        /// </summary>
        [Required]
        [Column("StartTime")]
        public DateTime StartTime { get; set; } = DateTime.UtcNow;

        /// <summary>
        /// When the trading session ended (null if still running)
        /// </summary>
        [Column("EndTime")]
        public DateTime? EndTime { get; set; }

        /// <summary>
        /// Session mode: "Backtest" or "Paper Trade"
        /// </summary>
        [Required]
        [StringLength(20)]
        [Column("Mode")]
        public string Mode { get; set; } = "Backtest";

        /// <summary>
        /// Starting balance for this session
        /// </summary>
        [Required]
        [Column("InitialBalance", TypeName = "decimal(18,2)")]
        public decimal InitialBalance { get; set; }

        /// <summary>
        /// Final balance (null if session is still running)
        /// </summary>
        [Column("FinalBalance", TypeName = "decimal(18,2)")]
        public decimal? FinalBalance { get; set; }

        /// <summary>
        /// Session status: "Running", "Completed", "Stopped", "Error"
        /// </summary>
        [Required]
        [StringLength(20)]
        [Column("Status")]
        public string Status { get; set; } = "Running";

        /// <summary>
        /// Navigation property - UserBot this session belongs to
        /// </summary>
        [ForeignKey("UserBotId")]
        public virtual UserBot UserBot { get; set; } = null!;

        /// <summary>
        /// Navigation property - Trades executed in this session
        /// </summary>
        public virtual ICollection<Trade> Trades { get; set; } = new List<Trade>();

        /// <summary>
        /// Navigation property - Performance metrics for this session
        /// </summary>
        public virtual ICollection<PerformanceMetric> PerformanceMetrics { get; set; } = new List<PerformanceMetric>();
    }
}