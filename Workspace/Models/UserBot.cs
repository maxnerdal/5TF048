using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace WebApp.Models
{
    /// <summary>
    /// UserBot model represents a user's active instance of a trading bot template
    /// This entity maps to the UserBots table in SQL Server
    /// </summary>
    [Table("UserBots")]
    public class UserBot
    {
        /// <summary>
        /// Primary key - automatically generated by database
        /// </summary>
        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column("UserBotId")]
        public long UserBotId { get; set; }

        /// <summary>
        /// Foreign key to Users table
        /// </summary>
        [Required]
        [Column("UserId")]
        public long UserId { get; set; }

        /// <summary>
        /// Foreign key to TradingBots table
        /// </summary>
        [Required]
        [Column("BotId")]
        public long BotId { get; set; }

        /// <summary>
        /// User's custom name for this bot instance
        /// </summary>
        [Required]
        [StringLength(100)]
        [Column("Name")]
        public string Name { get; set; } = string.Empty;

        /// <summary>
        /// Current status: "Active", "Inactive", "Paused", "Stopped"
        /// </summary>
        [Required]
        [StringLength(20)]
        [Column("Status")]
        public string Status { get; set; } = "Inactive";

        /// <summary>
        /// When this user bot was created
        /// </summary>
        [Required]
        [Column("Created")]
        public DateTime Created { get; set; } = DateTime.UtcNow;

        /// <summary>
        /// When this bot was last executed
        /// </summary>
        [Column("LastRun")]
        public DateTime? LastRun { get; set; }

        /// <summary>
        /// When this bot should execute next (UTC)
        /// </summary>
        [Column("NextExecutionTime")]
        public DateTime? NextExecutionTime { get; set; }

        /// <summary>
        /// Navigation property - User who owns this bot
        /// </summary>
        [ForeignKey("UserId")]
        public virtual User User { get; set; } = null!;

        /// <summary>
        /// Navigation property - Bot template this instance is based on
        /// </summary>
        [ForeignKey("BotId")]
        public virtual TradingBot TradingBot { get; set; } = null!;

        /// <summary>
        /// Navigation property - Bot configurations
        /// </summary>
        public virtual ICollection<BotConfiguration> BotConfigurations { get; set; } = new List<BotConfiguration>();

        /// <summary>
        /// Navigation property - Trading sessions for this bot
        /// </summary>
        public virtual ICollection<TradingSession> TradingSessions { get; set; } = new List<TradingSession>();
    }
}