@model WebApp.Models.PortfolioItemViewModel

@{
    ViewData["Title"] = "Add New Coin";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-header bg-success text-white">
                    <h3 class="mb-0">‚ûï Add New Cryptocurrency</h3>
                </div>
                <div class="card-body">
                    <form action="/Portfolio/Create" method="post">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
                        
                        <div class="mb-3">
                            <label asp-for="AssetId" class="form-label">Digital Asset</label>
                            <select asp-for="AssetId" asp-items="ViewBag.DigitalAssets" class="form-select" required>
                                <option value="">-- Select a cryptocurrency --</option>
                            </select>
                            <span asp-validation-for="AssetId" class="text-danger"></span>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Quantity" class="form-label">Quantity</label>
                                    <input asp-for="Quantity" class="form-control" step="any" placeholder="e.g., 0.5" />
                                    <div class="form-text">How many coins do you own?</div>
                                    <span asp-validation-for="Quantity" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="BuyPrice" class="form-label">Buy Price</label>
                                    <div class="input-group">
                                        <span class="input-group-text">$</span>
                                        <input asp-for="BuyPrice" class="form-control" step="0.01" placeholder="e.g., 45000.00" />
                                    </div>
                                    <div class="form-text">Price per coin when purchased</div>
                                    <span asp-validation-for="BuyPrice" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="DatePurchased" class="form-label">Date Purchased</label>
                            <input asp-for="DatePurchased" class="form-control" type="date" />
                            <span asp-validation-for="DatePurchased" class="text-danger"></span>
                        </div>

                        <!-- Investment Preview -->
                        <div class="card bg-light mb-3">
                            <div class="card-body">
                                <h6 class="card-title">üí∞ Investment Summary</h6>
                                <p class="mb-0">
                                    <span id="quantity-preview">0</span> √ó $<span id="price-preview">0</span> = 
                                    <strong>$<span id="total-preview">0.00</span></strong>
                                </p>
                            </div>
                        </div>

                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <a asp-action="Index" class="btn btn-secondary me-md-2">
                                ‚Ü©Ô∏è Back to Portfolio
                            </a>
                            <button type="submit" class="btn btn-success">
                                üíæ Add to Portfolio
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // Real-time calculation preview
        function updatePreview() {
            const quantity = parseFloat(document.querySelector('#Quantity').value) || 0;
            const price = parseFloat(document.querySelector('#BuyPrice').value) || 0;
            const total = quantity * price;
            
            document.querySelector('#quantity-preview').textContent = quantity.toFixed(8);
            document.querySelector('#price-preview').textContent = price.toFixed(2);
            document.querySelector('#total-preview').textContent = total.toFixed(2);
        }
        
        document.querySelector('#Quantity').addEventListener('input', updatePreview);
        document.querySelector('#BuyPrice').addEventListener('input', updatePreview);
        
        // Initialize preview
        updatePreview();
        
        // Auto-uppercase symbol
        document.querySelector('#Symbol').addEventListener('input', function(e) {
            e.target.value = e.target.value.toUpperCase();
        });
    </script>
}
